---
description: 
globs: 
alwaysApply: false
---
# [1] BaseCrawler 클래스 설계

## 🧱 목표
- 모든 매장 크롤러는 BaseCrawler를 상속받아 같은 인터페이스로 작동
- 로그인, 차량 검색, 쿠폰 조회, 쿠폰 적용 로직을 개별화

## 🧩 추상 클래스 구조
```python
class BaseCrawler:
    def __init__(self, store_config, playwright_config, structured_logger):
        self.store_config = store_config
        self.playwright_config = playwright_config
        self.structured_logger = structured_logger

    async def login(self, vehicle: Vehicle = None) -> bool: ...
    async def search_vehicle(self, vehicle: Vehicle) -> bool: ...
    async def get_coupon_history(self, vehicle: Vehicle) -> CouponHistory: ...
    async def apply_coupons(self, applications: List[CouponApplication]) -> bool: ...
```
- 각 매장(AStoreCrawler, BStoreCrawler 등)은 BaseCrawler를 상속받아 구현
- store_config.yaml에서 매장별 설정 정보를 로드하여 사용

## 🧠 장점
- 코드 일관성 유지
- 테스트 및 확장성 뛰어남
- 새로운 매장 추가 시 복사만 하면 됨